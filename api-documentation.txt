# Insure CRM API 명세서

## 기본 정보
- Base URL: http://localhost:3000
- Content-Type: application/json

## 1. 고객 관리 API

### 1.1. 고객 목록 조회 (GET /customers)

Request:
GET http://localhost:3000/customers

Response Example:
{
  "status": "success",
  "message": "데이터 조회 성공",
  "data": [
    {
      "id": "cust_001",
      "name": "홍길동",
      "phone": "010-1234-5678",
      "birth_date": "1990-01-15T00:00:00.000Z",
      "signup_date": "2024-01-01T00:00:00.000Z",
      "maturity_date": "2025-01-01T00:00:00.000Z",
      "auto_payment": true,
      "memo": "VIP 고객"
    },
    {
      "id": "cust_002",
      "name": "김철수",
      "phone": "010-9876-5432",
      "birth_date": "1985-03-20T00:00:00.000Z",
      "signup_date": "2024-02-01T00:00:00.000Z",
      "maturity_date": "2025-02-01T00:00:00.000Z",
      "auto_payment": false,
      "memo": null
    }
  ]
}

### 1.2. 특정 고객 조회 (GET /customers/{id})

Request:
GET http://localhost:3000/customers/cust_001

Response Example:
{
  "status": "success",
  "message": "데이터 조회 성공",
  "data": {
    "id": "cust_001",
    "name": "홍길동",
    "phone": "010-1234-5678",
    "birth_date": "1990-01-15T00:00:00.000Z",
    "signup_date": "2024-01-01T00:00:00.000Z",
    "maturity_date": "2025-01-01T00:00:00.000Z",
    "auto_payment": true,
    "memo": "VIP 고객"
  }
}

### 1.3. 고객 생성 (POST /customers)

Request:
POST http://localhost:3000/customers
Content-Type: application/json

{
  "name": "이영희",
  "phone": "010-5555-6666",
  "birth_date": "1988-07-25",
  "signup_date": "2024-03-20",
  "maturity_date": "2025-03-20",
  "auto_payment": true,
  "memo": "신규 고객"
}

Response Example:
{
  "status": "success",
  "message": "고객 생성 성공",
  "data": {
    "id": "cust_003",
    "name": "이영희",
    "phone": "010-5555-6666",
    "birth_date": "1988-07-25T00:00:00.000Z",
    "signup_date": "2024-03-20T00:00:00.000Z",
    "maturity_date": "2025-03-20T00:00:00.000Z",
    "auto_payment": true,
    "memo": "신규 고객"
  }
}

### 1.4. 고객 정보 수정 (PUT /customers/{id})

Request:
PUT http://localhost:3000/customers/cust_003
Content-Type: application/json

{
  "phone": "010-7777-8888",
  "auto_payment": false,
  "memo": "연락처 변경"
}

Response Example:
{
  "status": "success",
  "message": "고객 정보 수정 성공",
  "data": {
    "id": "cust_003",
    "name": "이영희",
    "phone": "010-7777-8888",
    "birth_date": "1988-07-25T00:00:00.000Z",
    "signup_date": "2024-03-20T00:00:00.000Z",
    "maturity_date": "2025-03-20T00:00:00.000Z",
    "auto_payment": false,
    "memo": "연락처 변경"
  }
}

### 1.5. 고객 삭제 (DELETE /customers/{id})

Request:
DELETE http://localhost:3000/customers/cust_003

Response Example:
{
  "status": "success",
  "message": "고객 삭제 성공",
  "data": null
}

## 2. 계약 관리 API

### 2.1. 계약 목록 조회 (GET /contracts)

Request:
GET http://localhost:3000/contracts

Response Example:
{
  "status": "success",
  "message": "데이터 조회 성공",
  "data": [
    {
      "id": "cont_001",
      "customerId": "cust_001",
      "details": "종신보험 - 월 납입금 50만원",
      "created_at": "2024-01-01T00:00:00.000Z"
    },
    {
      "id": "cont_002",
      "customerId": "cust_002",
      "details": "암보험 - 월 납입금 15만원",
      "created_at": "2024-02-01T00:00:00.000Z"
    }
  ]
}

### 2.2. 특정 계약 조회 (GET /contracts/{id})

Request:
GET http://localhost:3000/contracts/cont_001

Response Example:
{
  "status": "success",
  "message": "데이터 조회 성공",
  "data": {
    "id": "cont_001",
    "customerId": "cust_001",
    "details": "종신보험 - 월 납입금 50만원",
    "created_at": "2024-01-01T00:00:00.000Z"
  }
}

### 2.3. 계약 생성 (POST /contracts)

Request:
POST http://localhost:3000/contracts
Content-Type: application/json

{
  "customerId": "cust_001",
  "details": "실손의료보험 - 월 납입금 10만원"
}

Response Example:
{
  "status": "success",
  "message": "계약 생성 성공",
  "data": {
    "id": "cont_003",
    "customerId": "cust_001",
    "details": "실손의료보험 - 월 납입금 10만원",
    "created_at": "2024-03-20T09:30:00.000Z"
  }
}

### 2.4. 계약 수정 (PATCH /contracts/{id})

Request:
PATCH http://localhost:3000/contracts/cont_003
Content-Type: application/json

{
  "details": "실손의료보험 - 월 납입금 12만원 (금액 변경)"
}

Response Example:
{
  "status": "success",
  "message": "계약 수정 성공",
  "data": {
    "id": "cont_003",
    "customerId": "cust_001",
    "details": "실손의료보험 - 월 납입금 12만원 (금액 변경)",
    "created_at": "2024-03-20T09:30:00.000Z",
    "updated_at": "2024-03-20T10:15:00.000Z"
  }
}

### 2.5. 계약 삭제 (DELETE /contracts/{id})

Request:
DELETE http://localhost:3000/contracts/cont_003

Response Example:
{
  "status": "success",
  "message": "계약 삭제 성공",
  "data": null
}

## 에러 응답 예시

### 1. 리소스를 찾을 수 없는 경우
{
  "status": "error",
  "message": "고객을 찾을 수 없습니다.",
  "data": null
}

### 2. 유효성 검사 실패
{
  "status": "error",
  "message": "유효성 검사 실패",
  "data": {
    "errors": [
      {
        "field": "phone",
        "message": "올바른 전화번호 형식이 아닙니다."
      },
      {
        "field": "birth_date",
        "message": "생년월일은 필수 입력 항목입니다."
      }
    ]
  }
}

### 3. 서버 에러
{
  "status": "error",
  "message": "내부 서버 오류가 발생했습니다.",
  "data": null
}

## Curl 예시

고객 목록 조회:
curl -X GET http://localhost:3000/customers

고객 생성:
curl -X POST http://localhost:3000/customers \
  -H "Content-Type: application/json" \
  -d '{
    "name": "이영희",
    "phone": "010-5555-6666",
    "birth_date": "1988-07-25",
    "signup_date": "2024-03-20",
    "maturity_date": "2025-03-20",
    "auto_payment": true,
    "memo": "신규 고객"
  }'

## 참고사항

1. 모든 날짜/시간은 ISO 8601 형식으로 반환됩니다.

2. 페이지네이션이 필요한 경우 다음과 같은 쿼리 파라미터를 사용할 수 있습니다:
   - page: 페이지 번호 (기본값: 1)
   - limit: 페이지당 항목 수 (기본값: 10)
   예시: GET /customers?page=2&limit=20

3. 검색 및 필터링이 필요한 경우 다음과 같은 쿼리 파라미터를 사용할 수 있습니다:
   - search: 검색어
   - filter: 필터 조건
   예시: GET /customers?search=홍길동&filter=auto_payment:true

4. 모든 API 요청에는 적절한 인증 헤더가 필요할 수 있습니다:
   Authorization: Bearer <your_access_token>

이 API 명세서는 실제 구현된 기능을 기준으로 작성되었으며, 추가적인 기능이나 변경사항이 있을 수 있습니다. 